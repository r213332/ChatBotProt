// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id        String @id @default(uuid()) @db.Uuid
  session_id     String   @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // リレーション
  chats     Chat[]


  @@map(name: "users")
}

model Model{
  id              String @id @default(uuid()) @db.Uuid
  name            String 
  description     String 
  vector_store_id String

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // リレーション
  chats     Chat[]

  @@map(name: "models")
}

model Chat {
  id        String    @id @default(uuid()) @db.Uuid
  title     String    @db.Text
  user_id   String    @db.Uuid
  model_id  String?   @db.Uuid
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // 外部キー
  User      User      @relation(fields: [user_id], references: [id])
  Model     Model?    @relation(fields: [model_id], references: [id])

  // リレーション
  messages  Message[]

  @@map(name: "chats")
}

model Message {
  id        String @id @default(uuid()) @db.Uuid
  chat_id   String  @db.Uuid
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 外部キー
  Chat      Chat     @relation(fields: [chat_id], references: [id])

  @@map(name: "messages")
}